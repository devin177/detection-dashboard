{"version":3,"sources":["components/NavBar.js","img/corona.jpg","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","margin","NavBar","classes","className","AppBar","position","Toolbar","Typography","variant","paper","height","width","Menu","useState","allLocations","setAllLocations","setPosition","numPeople","setNumPeople","maxcap","setMaxCap","useEffect","fetch","method","mode","then","response","json","data","console","log","Box","padding","Dropdown","onSelect","e","curcapacity","maxcapacity","Toggle","id","map","currentLoc","Item","eventKey","Grid","container","justify","item","Paper","Card","CardContent","divider","minHeight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0ee193.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport background from '../img/corona.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    margin: 50\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            {/*Could put an ICON here. Like an eyeball*/}\n            <Typography variant=\"h2\" className={classes.title}>\n              Crowd Size Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/corona.7a357b22.jpg\";","import React, { useState, useEffect } from 'react'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Box, Typography, Grid, Card, Paper } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: 400,\n    width: 250,\n\t}\n}));\n\nfunction Menu() {\n  const [allLocations, setAllLocations] = useState([]);\n  const [position, setPosition] = useState('Davis');\n  const [numPeople, setNumPeople] = useState(0);\n  const [maxcap, setMaxCap] = useState(0);\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetch('https://95e4xx7ty1.execute-api.us-west-1.amazonaws.com/hackdavis/livedata?type=dropdown', {\n      method: \"GET\",\n      mode: 'cors'\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data);\n      setAllLocations(data);\n    })\n  }, []);\n\n  function menuHandler(e) {\n    setPosition(e)\n    console.log(e);\n    // api request to get the data for this location\n    updateData(e);\n  };\n\n  function updateData(place) {\n    fetch(`https://95e4xx7ty1.execute-api.us-west-1.amazonaws.com/hackdavis/livedata?type=${place}`, \n      {\n        method: \"GET\",\n        mode: \"cors\"\n      })\n      .then((response) => {return response.json()})\n      .then((data) => {\n        console.log(data);\n        setNumPeople(data.curcapacity);\n        setMaxCap(data.maxcapacity);\n      })\n  }\n\n  return(\n    <div>\n      <div>\n        <Box height={100} padding={5}>\n          <Typography variant='h3'>{position}</Typography>\n        </Box>\n\n        <Dropdown onSelect={menuHandler}>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Choose a Location\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            {allLocations.map(currentLoc => (\n              <Dropdown.Item eventKey={currentLoc} key={currentLoc}>{currentLoc}</Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n\n      <Grid container justify=\"center\" spacing={5}>\n        <Grid item>\n          <Paper className={classes.paper}>\n\t\t\t\t\t\t<Card padding={20}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tCurrent Number of People\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Typography variant='h1'>\n\t\t\t\t\t\t\t{numPeople}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Paper>\n        </Grid>\n\n\t\t\t\t<Grid item>\n          <Paper className={classes.paper}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tMax Capacity\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Typography variant='h1'>\n\t\t\t\t\t\t\t{maxcap}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Menu;\n","import './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from './components/NavBar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport React, { useState, useEffect } from 'react'\nimport { Card, Box} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Menu from './components/Menu.js';\n\nconst useStyles = makeStyles((theme) => ({\n\t// Shit don't work\n\tdivider: {\n\t\tminHeight: 20\n\t}\n}));\n\nfunction App() {\n\t// list of all locations\n\tconst [shoppers, setShoppers] = useState(0);\n\tconst [totalIn, setTotalIn] = useState(0);\n\t// const [totalOut, setTotalOut] = useState(0);\n\n\t// call all these state functions\n\t// Should be calls to api\n\t/*useEffect(() => {\n\t\t// go get data from db\n\t\tfetch('https://95e4xx7ty1.execute-api.us-west-1.amazonaws.com/hackdavis/livedata')\n\t\t\t.then(response => {\n\t\t\t\tfor (let i = 0; i < response.body.length; ++i) {\n\t\t\t\t\t// put stuff into the react state array\n\t\t\t\t\tsetAllLocations(allLocations.concat(response.body[i]));\n\t\t\t\t}\n\t\t\t})\n\t});*/\n\t// set the numbers\n\n\tconst classes = useStyles();\n\n  return (\n\t\t<div className = \"App\" spacing={10}>\n\t\t\t<NavBar></NavBar>\n\n\t\t\t<div className=\"divider\"></div>\n\n\t\t\t<Menu></Menu>\n\n\t\t</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}